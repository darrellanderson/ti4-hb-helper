import { FactionSchemaType, HomebrewModuleType, PlanetAttachmentSchemaType, SystemAttachmentSchemaType, SystemSchemaType } from "ti4-ttpg-ts-types";
export declare abstract class AbstractGen {
    private readonly _homebrew;
    private readonly _filenameToData;
    /**
     * Generate output files, use addOutputFile for each file.
     *
     * Cannot mix abstract and async keywords, but treat this as abstract.
     */
    generate(errors: Array<string>): Promise<void>;
    constructor(homebrew: HomebrewModuleType);
    addOutputFile(filename: string, data: Buffer): void;
    /**
     * Get the list of output files generated by this instance, for testing.
     *
     * @returns An array of output file paths.
     */
    _getOutputFiles(): Array<string>;
    getSource(): string;
    getFactions(): Array<FactionSchemaType>;
    getPlanetAttachments(): Array<PlanetAttachmentSchemaType>;
    getSystemAttachments(): Array<SystemAttachmentSchemaType>;
    getSystems(): Array<SystemSchemaType>;
    writeOutputFiles(modDir: string): Promise<void>;
}
